* Install (native) MySQL on Ubuntu
	sudo apt-get install mysql-server mysqltuner


* Install latest MySQL on Ubuntu (using MySQL Apt repos)
	http://dev.mysql.com/doc/mysql-apt-repo-quick-guide/en/

* Install Percona Toolkit (https://www.percona.com)
	sudo dpkg -i percona-toolkit_2.2.17-1_all.deb

* Secure MySQL installation
	sudo mysql_secure_installation

* Configure for performance (Percona offer a free configuration wizard on their website - https://tools.percona.com)
(your configuration file may be in a different location!)
	sudo vi /etc/mysql/my.cnf
(directories and memory allocations are, obviously, machine-dependent)
	[mysqld]
	# GENERAL #
	server-id = 12345
	
	# BINARY LOGGING #
	log-bin = /var/lib/mysql/mysql-bin
	expire-logs-days = 14
	sync-binlog = 1
	
	# CACHES AND LIMITS #
	tmp-table-size = 32M
	max-heap-table-size = 32M
	query-cache-type = 0
	query-cache-size = 0
	max-connections = 50
	thread-cache-size = 16
	open-files-limit = 65535
	table-definition-cache = 1024
	table-open-cache = 2048
	
	# INNODB #
	innodb-flush-method = O_DIRECT
	innodb-log-files-in-group = 2
	innodb-log-file-size = 512M
	innodb-flush-log-at-trx-commit = 2
	innodb-file-per-table = 1
	innodb-buffer-pool-size = 2G
	
	# LOGGING #
	log-error = /var/lib/mysql/mysql-error.log
	log-queries-not-using-indexes = 1
	slow-query-log = 1
	slow-query-log-file = /var/lib/mysql/mysql-slow.log


* Update Ubuntu AppArmor (if loading data without the "local" option):
	sudoedit /etc/apparmor.d/usr.sbin.mysqld
		Add <dir> and <dir>/* from which files are to be loaded, setting permissions to read-only
	sudo /etc/init.d/apparmor reload


* Create NCCDC 2015 database on local host
	mysql -u root -p

	create database nccdc_2015;
	grant all on nccdc_2015.* to 'naimuri'@'localhost' identified by '****';
	grant file on *.* to 'naimuri'@'localhost';
	exit


* Remote (AWS) server (create user)
	mysql -h mlresearch.cq0hx0grrzou.us-west-2.rds.amazonaws.com -P 3306 -u samo -p

	grant all on nccdc_2015.* to 'naimuri'@'%' identified by '****';
	exit


* Create fifo/pipe file for loading multiple files of data
	mkfifo /tmp/nccdc_2015.dat
	chmod 666 /tmp/nccdc_2015.dat


* Connect to local MySQL DB
	mysql -u naimuri -p -D nccdc_2015 --local-infile --show-warnings


* Connect to remote (AWS) MySQL DB
	mysql -h mlresearch.cq0hx0grrzou.us-west-2.rds.amazonaws.com -P 3306 -u naimuri -p -D nccdc_2015 --local-infile


* Create table
create table if not exists pcap_data (
	protocol tinyint unsigned not null COMMENT '1=ICMP, 6=TCP, 17=UDP',
	time real not null,
	ts datetime(6) GENERATED ALWAYS AS (from_unixtime(time)) VIRTUAL,
	src bigint not null,
	src_ip varchar(20) GENERATED ALWAYS AS (inet_ntoa(src)) VIRTUAL,
	dst bigint not null,
	dst_ip varchar(20) GENERATED ALWAYS AS (inet_ntoa(dst)) VIRTUAL,
	src_port smallint unsigned null,
	dst_port smallint unsigned null,
	ttl smallint unsigned not null,
	length smallint unsigned not null,
	fragment smallint unsigned not null,
	flags smallint unsigned null COMMENT 'Bit field: 1=FIN, 2=SYN, 4=RST, 8=PSH, 16=ACK, 32=URG',
	syn tinyint unsigned GENERATED ALWAYS AS (if(ifnull(flags,0)&2 = 2, 1, 0)) STORED,
	ack tinyint unsigned GENERATED ALWAYS AS (if(ifnull(flags,0)&16 = 16, 1, 0)) STORED,
	rst tinyint unsigned GENERATED ALWAYS AS (if(ifnull(flags,0)&4 = 4, 1, 0)) STORED,
	INDEX ind_time (time),
	INDEX ind_src (src, src_port),
	INDEX ind_dst (dst, dst_port),
	INDEX ind_syn (syn),
	INDEX ind_ack (ack),
	INDEX ind_rst (rst),
	INDEX ind_protocol (protocol)
);


* Create table (raw)
create table if not exists nccdc_2015 (
	protocol tinyint unsigned not null COMMENT '1=ICMP, 6=TCP, 17=UDP',
	time real not null,
	src bigint not null,
	dst bigint not null,
	src_port smallint unsigned null,
	dst_port smallint unsigned null,
	ttl smallint unsigned not null,
	length smallint unsigned not null,
	fragment smallint unsigned not null,
	flags smallint unsigned null COMMENT 'Bit field: 1=FIN, 2=SYN, 4=RST, 8=PSH, 16=ACK, 32=URG',
        syn tinyint unsigned GENERATED ALWAYS AS (if(ifnull(flags,0)&2 = 2, 1, 0)) STORED,
        ack tinyint unsigned GENERATED ALWAYS AS (if(ifnull(flags,0)&16 = 16, 1, 0)) STORED,
        rst tinyint unsigned GENERATED ALWAYS AS (if(ifnull(flags,0)&4 = 4, 1, 0)) STORED
);


* Add generated columns
	alter table nccdc_2015 add ts datetime(6) GENERATED ALWAYS AS (from_unixtime(time)) VIRTUAL;
	alter table nccdc_2015 add src_ip varchar(20) GENERATED ALWAYS AS (inet_ntoa(src)) VIRTUAL;
	alter table nccdc_2015 add dst_ip varchar(20) GENERATED ALWAYS AS (inet_ntoa(dst)) VIRTUAL;


* Add indices
	create INDEX ind_time (time) on nccdc_2015;
	create INDEX ind_src (src, src_port) on nccdc_2015;
	create INDEX ind_dst (dst, dst_port) on nccdc_2015;
	create INDEX ind_syn (syn) on nccdc_2015;
	create INDEX ind_ack (ack) on nccdc_2015;
	create INDEX ind_rst (rst) on nccdc_2015;
	create INDEX ind_protocol (protocol) on nccdc_2015;


* Local table from local fifo/pipe file
(Connected to mysql client)

SET @@session.sql_log_bin=0;
set unique_checks = 0;
set foreign_key_checks = 0;
set sql_log_bin=0;
set autocommit = 0;

load data local infile '/tmp/nccdc_2015.csv' into table nccdc_2015
	fields terminated by ','
	lines terminated by '\n'
	(@dummy, protocol, time, src, dst, @sp, @dp, ttl, length, fragment, @f)
	set flags = nullif(@f, ''), \
	src_port = nullif(@sp, '??'), \
	dst_port = nullif(@dp, '??');

commit;


(separate terminal)
	cat /tmp/data/2015/processed/csv/*.csv > /tmp/nccdc.dat

	pt-fifo-split --lines 1000000 hugefile.txt
	while [ -e /tmp/pt-fifo-split ]; do cat /tmp/pt-fifo-split; done




* load multiple files remotely (without using a fifo/pipe file)
	cd /tmp/data/2015/processed/csv/;

	for f in `ls -1`
	do
		mysql -h mlresearch.cq0hx0grrzou.us-west-2.rds.amazonaws.com -P 3306 -u naimuri -p -D nccdc_2015 --local-infile -e "load data local infile '$f' into table pcap_data \
		fields terminated by ',' \
		lines terminated by '\n' \
		(@dummy, protocol, time, src, dst, @sp, @dp, ttl, length, fragment, @f) \
		set flags = nullif(@f, ''), \
		src_port = nullif(@sp, '??'), \
		dst_port = nullif(@dp, '??')";
	done;

